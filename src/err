warning: unused `std::result::Result` that must be used
 --> src/main.rs:5:5
  |
5 |     parse::rule_def("(abc)");
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_must_use)]` on by default
  = note: this `Result` may be an `Err` variant, which should be handled

warning: 1 warning emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.01s
     Running `/home/jonas/prog/bnf-to-cnf/target/debug/bnf-to-cnf`
rule_def (abc)
rule_def abc)
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )
rule_def )

thread 'main' has overflowed its stack
fatal runtime error: stack overflow
